
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.7'
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "0.1.0." + ((System.getenv("TRAVIS_BUILD_NUMBER") == null) ? '0' : System.getenv("TRAVIS_BUILD_NUMBER"))
group= "io.github.forgeadmin" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "forgeadmin-core"
targetCompatibility = '1.8'
sourceCompatibility = '1.8'

minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"
    mappings = "stable_20"
}

task deobfJar(type: Jar, dependsOn: 'jar') {
    from "build/classes/main"
    classifier "dev"
}

task sourcesJar(type: Jar, dependsOn: 'sourceMainJava') {
    from "build/sources/main/java"
    from "build/resources/main"
    classifier "sources"
}

artifacts {
    archives deobfJar
    archives sourcesJar
}

curseforge {
    apiKey = ((System.getenv("CURSE_API") == null) ? '000000' : System.getenv("CURSE_API"))
    project {
        id = '244511'
        changelog = ((System.getenv("TRAVIS_COMMIT_MSG") == null) ? 'No changes' : System.getenv("TRAVIS_COMMIT_MSG"))
        releaseType = 'release'
        addArtifact sourcesJar
        addArtifact deobfJar
    }
}

dependencies {
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
